name: Tests

on:
  pull_request:
  push:
    branches:
      - master

# One active job per PR, cancel older ones on push
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  integration_tests:
    name: Build and Test
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: .github/workflows/xcode_select.sh
      - name: Build and Test
        run: |
          # Host config
          bazelisk test --local_test_jobs=1 -- //... -//tests/ios/...

          # Clean up after simctl (https://github.com/bazelbuild/rules_apple/issues/185)
          pgrep Simulator | xargs kill || true

          # Create single ephemeral iOS sim
          SIMULATOR_UDID=$(./tools/tests/prepare_sim.py)

          # `deleted_packages` is needed below in order to override the value of the .bazelrc file
          bazelisk test \
            --local_test_jobs=1 \
            --apple_platform_type=ios \
            --deleted_packages='' \
            --test_arg=--destination=platform=ios_simulator,id=$SIMULATOR_UDID \
            -- //tests/ios/...
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: bazel-testlogs
          path: bazel-testlogs
  build_virtual_frameworks:
    # Build the entire tree with this feature enabled. Longer term, we'll likely
    # consider merging this feature into the default behavior and can re-align
    # the CI job
    name: Build and Test ( Virtual Frameworks )
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: .github/workflows/xcode_select.sh
      - name: Build and Test
        run: |
          # Host config
          bazelisk build --features apple.virtualize_frameworks --local_test_jobs=1 -- //... -//tests/ios/...

          # `deleted_packages` is needed below in order to override the value of the .bazelrc file
          bazelisk build --features apple.virtualize_frameworks \
              --local_test_jobs=1 \
              --apple_platform_type=ios \
              --deleted_packages='' \
              -- //tests/ios/... \
              -//tests/ios/frameworks/sources-with-prebuilt-binaries/... # Needs more work for pre-built binaries
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: bazel-testlogs
          path: bazel-testlogs

  build_arm64_simulator:
    name: Build arm64 Simulator
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: .github/workflows/xcode_select.sh
      - name: Build and Test
        run: |
          bazelisk build --ios_multi_cpus=sim_arm64  --features apple.virtualize_frameworks -- //... -//tests/ios/...

          # Misc issues:
          # Carthage is busted for -//tests/ios/frameworks/sources-with-prebuilt-binaries/...
          # Fails on a non fat framework for //tests/ios/unit-test/test-imports-app/
          bazelisk build --ios_multi_cpus=sim_arm64 --features apple.virtualize_frameworks \
              --apple_platform_type=ios \
              --deleted_packages='' \
              -- //tests/ios/... \
              -//tests/ios/frameworks/sources-with-prebuilt-binaries/... \
              -//tests/ios/unit-test/test-imports-app/...

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: bazel-testlogs
          path: bazel-testlogs

  buildifier:
    name: Check Starlark and Docs
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: .github/workflows/xcode_select.sh
        # Note: we need to pass the absolute to the Bazel run
      - name: buildifier
        run: find $PWD -type f \( -name 'WORKSPACE' -o -name '*.bzl' -o -name '*.bazel' \) | xargs bazel run buildifier -- -lint=fix && git diff --exit-code
      - name: Check docs
        run: bazelisk run docs && git diff --exit-code docs
  xcodeproj_tests:
    name: .xcodeproj Tests on Xcode 14.2.0
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode 14.2.0
        run: .github/workflows/xcode_select.sh
      - name: Run tests
        run: ./tests/xcodeproj-tests.sh --clean && ./tests/test-tests.sh
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: bazel-testlogs
          path: bazel-testlogs

  lldb_ios_tests_xcode:
    name: LLDB tests on Xcode 14.2.0
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode 14.2.0
        run: .github/workflows/xcode_select.sh
      - name: Run tests
        run: bazelisk test tests/ios/lldb/app:objc_app_po_test  tests/ios/lldb/app:objc_app_variable_test --config lldb_ios_test
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: bazel-testlogs
          path: bazel-testlogs
  multi_arch_support:
    name: Build iOS App for Multiple Architecture
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Select Xcode
        run: .github/workflows/xcode_select.sh
      - name: Build App
        run: bazelisk build -s tests/ios/app/App --apple_platform_type=ios --ios_minimum_os=10.2  --ios_multi_cpus=i386,x86_64
