# Pull buildifer.mac as an http_file, then depend on the file group to make an
# executable
load("@build_bazel_rules_swift//swift/internal:feature_names.bzl", "SWIFT_FEATURE_USE_GLOBAL_INDEX_STORE")
load("//rules:features.bzl", "feature_names")
load("@bazel_skylib//lib:selects.bzl", "selects")

sh_binary(
    name = "buildifier",
    srcs = select({
        "@bazel_tools//src/conditions:darwin_x86_64": ["@buildifier.mac.amd64//file"],
        "@bazel_tools//src/conditions:darwin_arm64": ["@buildifier.mac.arm64//file"],
    }),
)

config_setting(
    name = "use_global_index_store",
    values = {
        "features": SWIFT_FEATURE_USE_GLOBAL_INDEX_STORE,
    },
)

config_setting(
    name = "virtualize_frameworks",
    values = {
        "features": feature_names.virtualize_frameworks,
    },
)

selects.config_setting_group(
    name = "arm64_simulator_use_device_deps",
    match_any = [
        ":arm64_simulator_use_device_deps_default",
        ":arm64_simulator_use_device_deps_intel",
        ":arm64_simulator_use_device_deps_sim_arm64",
    ],
)

config_setting(
    name = "feature_arm64_simulator_use_device_deps",
    values = {
        "features": feature_names.arm64_simulator_use_device_deps,
    },
)

config_setting(
    name = "feature_bazel4_override_simulator_cpu_arm64",
    values = {
        "features": feature_names.bazel4_override_simulator_cpu_arm64,
    },
)

config_setting(
    name = "cpu_default",
    values = {
        "cpu": "",
    },
)

config_setting(
    name = "cpu_ios_x86_64",
    values = {
        "cpu": "ios_x86_64",
    },
)

config_setting(
    name = "cpu_ios_sim_arm64",
    values = {
        "cpu": "ios_sim_arm64",
    },
)

# Default this on for simulators when platform is done
selects.config_setting_group(
    name = "arm64_simulator_use_device_deps_default",
    match_all = [
        ":cpu_default",
        ":feature_arm64_simulator_use_device_deps",
        ":feature_bazel4_override_simulator_cpu_arm64",
    ],
)

selects.config_setting_group(
    name = "arm64_simulator_use_device_deps_intel",
    match_all = [
        ":cpu_ios_x86_64",
        ":feature_arm64_simulator_use_device_deps",
        ":feature_bazel4_override_simulator_cpu_arm64",
    ],
)

# Implement this feature per CPU
selects.config_setting_group(
    name = "arm64_simulator_use_device_deps_sim_arm64",
    match_all = [
        ":cpu_ios_sim_arm64",
        ":feature_arm64_simulator_use_device_deps",
    ],
)

selects.config_setting_group(
    name = "bazel4_override_simulator_cpu_arm64_default",
    match_all = [
        ":cpu_default",
        ":feature_bazel4_override_simulator_cpu_arm64",
    ],
)

selects.config_setting_group(
    name = "bazel4_override_simulator_cpu_arm64_default_intel",
    match_all = [
        ":cpu_ios_x86_64",
        ":feature_bazel4_override_simulator_cpu_arm64",
    ],
)

selects.config_setting_group(
    name = "bazel4_override_simulator_cpu_arm64",
    match_any = [
        ":bazel4_override_simulator_cpu_arm64_default",
        ":bazel4_override_simulator_cpu_arm64_default_intel",
    ],
)

xcode_version(
    name = "version12_2_0_12B45b",
    aliases = [
        "12.2",
        "12.2.0",
        "12.2.0.12B45b",
    ],
    default_ios_sdk_version = "14.2",
    default_macos_sdk_version = "11.0",
    default_tvos_sdk_version = "14.2",
    default_watchos_sdk_version = "7.1",
    version = "12.2.0.12B45b",
)

xcode_config(
    name = "host_xcodes",
    default = ":version12_5_1_12E507",
    versions = [
        ":version12_2_0_12B45b",
        ":version12_5_1_12E507",
    ],
    visibility = ["//visibility:public"],
)

xcode_version(
    name = "version12_5_1_12E507",
    aliases = [
        "12.5.1",
        "12",
        "12.5",
        "12.5.1.12E507",
    ],
    default_ios_sdk_version = "14.5",
    default_macos_sdk_version = "11.3",
    default_tvos_sdk_version = "14.5",
    default_watchos_sdk_version = "7.4",
    version = "12.5.1.12E507",
)

available_xcodes(
    name = "host_available_xcodes",
    default = ":version12_5_1_12E507",
    versions = [
        ":version12_5_1_12E507",
        ":version12_2_0_12B45b",
    ],
)
