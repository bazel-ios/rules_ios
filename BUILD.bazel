# Pull buildifer.mac as an http_file, then depend on the file group to make an
# executable
load("@build_bazel_rules_swift//swift/internal:feature_names.bzl", "SWIFT_FEATURE_USE_GLOBAL_INDEX_STORE")
load("//rules:features.bzl", "feature_names")

sh_binary(
    name = "buildifier",
    srcs = ["@buildifier.mac//file"],
)

config_setting(
    name = "use_global_index_store",
    values = {
        "features": SWIFT_FEATURE_USE_GLOBAL_INDEX_STORE,
    },
)

config_setting(
    name = "virtualize_frameworks",
    values = {
        "features": feature_names.virtualize_frameworks,
    },
)

config_setting(
    name = "arm64_simulator_use_device_deps",
    values = {
        "features": feature_names.arm64_simulator_use_device_deps,
    },
)

config_setting(
    name = "bazel4_override_simulator_cpu_arm64",
    values = {
        "features": feature_names.bazel4_override_simulator_cpu_arm64,
    },
)

xcode_version(
    name = "version12_2_0_12B45b",
    aliases = [
        "12",
        "12.2",
        "12.2.0",
        "12.2.0.12B45b",
    ],
    default_ios_sdk_version = "14.2",
    default_macos_sdk_version = "11.0",
    default_tvos_sdk_version = "14.2",
    default_watchos_sdk_version = "7.1",
    version = "12.2.0.12B45b",
)

xcode_config(
    name = "host_xcodes",
    default = ":version12_2_0_12B45b",
    versions = [
        ":version12_2_0_12B45b",
    ],
    visibility = ["//visibility:public"],
)
