load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("@build_bazel_rules_swift//swift:swift.bzl", "swift_library")

exports_files(
    glob(["*.bzl"]),
    visibility = ["//docs:__pkg__"],
)

genrule(
    name = "empty",
    outs = ["empty.swift"],
    cmd = "touch $(OUTS)",
)

# A dummy target that enables serialize-debugging-options but only in local development,
# so that swiftmodule paths will refer to paths on the local machine and LLDB will work.
# See details here: https://github.com/ios-bazel-users/ios-bazel-users/blob/master/DebuggableRemoteSwift.md
swift_library(
    name = "_LocalDebugOptions",
    srcs = [":empty"],
    copts = [
        "-Xfrontend",
        "-serialize-debugging-options",
    ],
    module_name = "_LocalDebugOptions",
    tags = [
        "manual",
        "no-remote",
    ],
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "local_debug_options_enabled",
    build_setting_default = False,
)

config_setting(
    name = "local_debug_options",
    flag_values = {
        ":local_debug_options_enabled": "True",
    },
)
