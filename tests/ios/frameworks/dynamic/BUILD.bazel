load("//rules:app.bzl", "ios_application")
load("//rules:test.bzl", "ios_unit_test")
load("@build_bazel_rules_apple//apple/internal:xcframework_rules.bzl", "apple_xcframework")

ios_application(
    name = "App",
    srcs = ["App/main.swift"],
    bundle_id = "com.example.app",
    minimum_os_version = "10.0",
    visibility = ["//visibility:public"],
    # This should automatically bake in a,b
    deps = [
        "//tests/ios/frameworks/dynamic/a",
    ],
)

apple_xcframework(
    name = "iOSSwiftXCFramework",
    bundle_id = "com.google.example",
    bundle_name = "c",
    framework_type = ["dynamic"],
    infoplists = [
        "Info.plist",
    ],
    ios = {
        "simulator": [
            "arm64",
            "x86_64",
        ],
        "device": [
            "arm64",
        ],
    },
    minimum_os_versions = {
        "ios": "8.0",
    },

    # On CI we set ios_multi_cpus - which causes swirl with the transitions here
    tags = ["manual"],
    # Note: rules_apple doesn't allow you to pass transtive swiftmodules and it
    # also uses xcodebuild -create-xcframework which causes issues here. Incase
    # anyone wants to use this ensure that it works.
    deps = [
        "//tests/ios/frameworks/dynamic/c",
    ],
)

ios_unit_test(
    name = "TestAppWithDylibs",
    srcs = ["empty_tests.m"],
    bundle_id = "com.foo.bar",
    data = ["test_data.txt"],
    frameworks = [
        "//tests/ios/frameworks/dynamic/a",
    ],
    minimum_os_version = "10.0",
    test_host = ":App",
    #test_host = True,
    deps = [
        "//tests/ios/frameworks/dynamic/a",
    ],
)
