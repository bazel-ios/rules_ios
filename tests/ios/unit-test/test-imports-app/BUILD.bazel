load("//rules:app.bzl", "ios_application")
load("//rules:framework.bzl", "apple_framework", "apple_framework_packaging")
load("//rules:test.bzl", "ios_unit_test")
load(":analysis-tests.bzl", "make_tests")

apple_framework(
    name = "SomeFramework",
    srcs = glob(["SomeFramework/*.swift"]),
    platforms = {
        "ios": "12.0",
    },
    visibility = ["//visibility:public"],
    deps = ["//tests/ios/unit-test/test-imports-app/frameworks/Basic"],
)

ios_application(
    name = "TestImports-App",
    srcs = [
        "Header.h",
        "Header2.h",
        "empty.swift",
        "main.m",
    ],
    bundle_id = "com.example.TestImports-App",
    families = [
        "ipad",
        "iphone",
    ],
    infoplists = [":Info.plist"],
    minimum_os_version = "12.0",
    module_name = "TestImports_App",
    resource_bundles = {"ResourceBundle": glob(
        ["Resources/**/*"],
        exclude_directories = 0,
    )},
    sdk_frameworks = ["UIKit"],
    swift_objc_bridging_header = "TestImports-App-Bridging-Header.h",
    visibility = ["//visibility:public"],
    deps = [
        ":SomeFramework",
        "@GoogleMobileAdsSDK//:GoogleMobileAds",
        "@TensorFlowLiteC",
        "@TensorFlowLiteC//:TensorFlowLiteCCoreML",
    ],
)

# Implicitly generate a framework without a binary so tests can
# import code from their test hosts without it being double-linked.
apple_framework_packaging(
    name = "TestImports-App_framework_unlinked",
    framework_name = "TestImports-App",
    platforms = {
        "ios": "12.0",
    },
    skip_packaging = ["binary"],
    tags = [
        "manual",
        "xcodeproj-ignore-as-target",
    ],
    transitive_deps = [
        "@TensorFlowLiteC//:TensorFlowLiteC",
        "@TensorFlowLiteC//:TensorFlowLiteCCoreML",
        "@GoogleMobileAdsSDK//:GoogleMobileAds",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":TestImports-App_objc",
        ":TestImports-App_swift",
    ],
)

ios_unit_test(
    name = "TestImports-Unit-Tests",
    srcs = [
        "test.m",
        "test.swift",
        "testhelper.h",
        "testhelper.m",
    ],
    minimum_os_version = "12.0",
    module_name = "TestImports_Unit_Tests",
    sdk_frameworks = ["XCTest"],
    swift_objc_bridging_header = "TestImports-Unit-Tests-Bridging-Header.h",
    test_host = ":TestImports-App",
    # Adding visibility so the xcodeproject tests can depend on this target
    visibility = ["//visibility:public"],
    deps = [
        ":TestImports-App_framework_unlinked",
    ] + select({
        # It isn't seeing the `deps` attribute when using
        # apple_framework_packaging directly
        "@build_bazel_rules_ios//:virtualize_frameworks": [
            ":SomeFramework",
        ],
        "//conditions:default": [],
    }),
)

make_tests()
